<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Cabeca</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Corpo

corpo = ds_list_create();
nCrescer = 2; // Quanto blocos deve crescer

// Cabeça
corpo[|0] = id;

// TODO
//corpo[|1] = instance_create(x - BLOCO, y, obj_Membro);
//corpo[|2] = instance_create(x - 2*BLOCO, y, obj_Membro);
//corpo[|3] = instance_create(x - BLOCO, y, obj_Membro);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Estado

estado = EST_MOVENDO;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movimento

contPasso = 30; // TODO
direcao = DIR_DIREITA;
direcaoAnt = direcao;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Limpeza

ds_list_destroy(corpo);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movimento

if (estado == EST_MOVENDO)
{
    // Direção nova
    if (keyboard_check_pressed(vk_left)  &amp;&amp; direcaoAnt != DIR_DIREITA)
        direcao = DIR_ESQUERDA;
    if (keyboard_check_pressed(vk_right) &amp;&amp; direcaoAnt != DIR_ESQUERDA)
        direcao = DIR_DIREITA;
    if (keyboard_check_pressed(vk_up)    &amp;&amp; direcaoAnt != DIR_BAIXO)
        direcao = DIR_CIMA;
    if (keyboard_check_pressed(vk_down)  &amp;&amp; direcaoAnt != DIR_CIMA)
        direcao = DIR_BAIXO;

    // Move / Tenta mover
    contPasso--;
    if (contPasso == 0) // Hora de mover
    {
        var dx, dy, xNovo, yNovo;
        switch (direcao)
        {
            case DIR_ESQUERDA: dx = -1; dy =  0; break;
            case DIR_DIREITA:  dx =  1; dy =  0; break;
            case DIR_CIMA:     dx =  0; dy = -1; break;
            case DIR_BAIXO:    dx =  0; dy =  1; break;
        }
        xNovo = x + dx*BLOCO;
        yNovo = y + dy*BLOCO;
        
        // Verifica se vai morrer
        //if (instance_place(xNovo, yNovo, obj_Chao))
        
        // Verifica se tem comida
        comida = instance_place(xNovo, yNovo, obj_Comida); // Ineficiente...
        if (comida != noone)
            comer(comida);
        
        // Verifica se deve crescer
        if (nCrescer &gt; 0)
        {
            ds_list_add(corpo, instance_create(0, 0, obj_Membro));
            nCrescer--;
        }
        
        // Move cada membro
        var i;
        for (i = ds_list_size(corpo) - 1; i &gt; 0; i--)
        {
            membro = corpo[|i];
            anterior = corpo[|i - 1];
            membro.x = anterior.x;
            membro.y = anterior.y;
        }
        // Move a cabeça
        x = xNovo;
        y = yNovo;
        direcaoAnt = direcao;
        
        // Reseta contPasso TODO
        contPasso = 15;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Desenha-se

draw_sprite(spr_Cabeca, direcao, x, y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
